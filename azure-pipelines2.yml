trigger:
- master

resources:
- repo: self


variables:
  imageName: azure-pipelines-canary-k8s
  dockerRegistryServiceConnection: 'azure-container-registry'
  k8sNamespace: 'default'
  imagePullSecret: 'faidtsmicrosvcsspringbootregistry.azurecr.io'
  imageRepository: 'azure-pipelines-canary-k8s'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'
  system.debug: true
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push image
      inputs:
        containerRegistry: azure-pipelines-canary-k8s #replace with name of your Docker registry service connection
        repository: $(imageName)
        command: buildAndPush
        Dockerfile: app/Dockerfile
        tags: |
          $(tag)


    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in manifests/deployment.yml'
      inputs:
        targetFiles: manifests/deployment.yml


    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        Contents: |
         manifests/deployment.yml
         manifests/service.yml
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'manifests'
        targetPath: 'manifests'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: $(vmImageName)
    environment: 'canarytesting'
    strategy:
      canary:
        increments: [10,20]
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'manifests'
              downloadPath: '$(System.ArtifactsDirectory)/manifests'

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              kubernetesServiceConnection: azure-pipelines-canary-k8s-svc
              action: deploy
              namespace: $(k8sNamespace)
              strategy: $(strategy.name)
              percentage: $(strategy.increment)
              manifests: |
                $(System.ArtifactsDirectory)/manifests/deployment.yml
                $(System.ArtifactsDirectory)/manifests/service.yml

